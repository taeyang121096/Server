소프트웨어 공학


1. 클린코드 : 가독성이 높은 코드를 말한다.
- 네이밍이 잘 되어야 함
- 오류가 없어야함
- 중복이 없어야함
- 의존성을 최대한 줄여야함
class Node
{
 Ab a;

public ~~ ~~(){
Ab a = new Ab();
String name  =a.getName();
int return이 로 바뀌면 String name => int name  
이런식으로 접근 하면 안된다

}
}
- 클래스 혹은 메소드가 한가지 일만 처리해야 함

2. 리팩토링 : 프로그램의 외부 동작은 그대로 두고, 내부 코드를 개선
- 중복 코드
- 긴 메소드
- 거대한 클래스
- switch 문
- 절차지향으로 구현한 코드 

리팩토링 이랑 클린코드랑 차이 : 

- 클린코드는 개발을 진행하기전에 규칙을 잡고 개발 방법
- 리팩토링은 개발이 완료된 코드를 개선하는 방법이지

TDD : 테스트 주도 개발

- 테스트 케이스를 작성한 후 실제 코드를 작성하는 방법
- 설계 - 테스트 코드 작성(테스트가 정확할 경우) - 개발 - 반복
- tdd 어디서 사용하냐 : 안전성이 많이 요구되는 자율주행, gtx와 같은 철도 시스템에 사용된다.
- tdd 단점 : 기존 개발 방법보다 적응하는데 추가 비용이 든다.

애자일 : 애자일의 핵심은 협력과 피드백이다. 개발의 불확실성

- 요구사항 수용 - 고객 요구상 우선시,그 다음 팀 목표 - 주기적 미팅 통해 프로젝트 점검 - 제품 시현 피드백 수용

