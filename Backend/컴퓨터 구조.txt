컴퓨터 구조



1. 컴퓨터의 구성

하드웨어 : 컴퓨터를 구성하는 기계적 장치

소프트웨어 : 하드웨어의 동작을 지시하고 제어하는 명령어 집합

하드웨어 : cpu(중앙처리 장치), ram, hdd(기억장치), mouse, printer

시스템 버스 : 하드웨어 구성 요소를 물리적으로 연결하는 선 -> 각 구성요소가 다른 구성요소로 데이터를 보낼 수 있는 통로 ( 데이터 버스, 주소 버스, 제어 버스) 

데이터 버스 : 중앙처리장치와 기타 장치 사이에서 데이터를 전달하는 통로, 기억장치와 입출력장치의 명령어와 데이터를 중앙처리장치로 보내거나, 중앙처리장치의 연산 결과를 기억 장치와 입출력장치로 보내는 양방향 버스이다.

주소 버스 : 중앙처리장치가 주기억장치나 입출력장치로 기억장치 주소를 전달하는 통로이기 때문에 단방향 버스이다

제어 버스 : 주소 버스와 데이터 버스는 모든 장치에 공유되므로 제어가 필요하다. 제어 버스는 읽기 동작과 쓰기 동작을 모두 수행하기 때문에 양방향 버스이다.

시스템 소프트웨어 : 운영체제, 컴파일러

응용 소프트웨어 : 워드 ~~

CPU는 크게 연산장치, 제어장치, 레지스터 3가지로 구성된다.

연산 장치 : 산술연산과 논리연산 수행, 연산에 필요한 데이터를 레지스터에서 가져오고, 연산 결과를 다시 레지스터로 보냄

제어 장치 : 명령어를 순서대로 실행할 수 있도록 제어하는 장치,
주기억장치에서 프로그램 명령어를 꺼내 해독하고, 그 결과에 따라 제어 신호를 기억장치, 연산장치, 입출력장치로 보냄, 또한 이 장치들이 보낸 신호를 받아, 다음 수행 동작을 결정

레지스터 : 고속 기억장치이다. 명령어 주소, 코드, 연산에 필요한 데이터, 연산 결과 등을 임시 저장, 용도에 따라 범용 레지스터(연산에 필요한 데이터 또는 연산 결과 저장), 특수목적 레지스터로 구분 된다.

특수 목적 레지스터 : MAR, PC, IR, MBR, AC

명령어 세트 : 연산 코드 + 피연산자로 이루어짐

명령어 사이클 : 인출 + 실행 + 간접 + 인터럽트

캐시 메모리 : 속도가 빠른 장치와 느린 장치에서 속도 차이에 따른 병목 현상을 줄이기 위한 메모리

디스크 캐시 : 주기억장치와 보조기억장치 사이에 존재하는 캐시

캐시 메모리 작동 원리

시간 지역성 : 한번 참조된 데이터는 잠시후 또 참조될 가능성이 높음

공간 지역성 : 참조된 데이터 근처에 있는 데이터가 잠시후 또 사용될 가능성이 높음

고정 소수점 : 소수점이 찍힐 위치를 미리 정해 놓고 소수를 표현하는 방식(정수 + 소수) 32bit -> 1 bit(부호) 15 bit(정수) 16 bit(소수)

부동 소수점 : 지수의 값에 따라 소수점이 움직이는 방식을 활용한 실수 표현 방법, 가수부 + 지수부로 표현(오차가 발생할 수 있다)
32 bit -> 1 bit (부호) 8 bit (지수부) 23 bit(가수부)

패리티 비트 : 정보 전달 과정에서 오류가 생겼는지 검사하기 위해 추가하는 비트를 말한다. (데이터의 각 문제에 1bit를 더하여 전송) -> 짝수, 홀수에 맞도록 비트를 정한다.

해밍 코드 : 데이터 전송 시 1bit의 에러를 정정할 수 있는 자기 오류 정정 코드

ARM 프로세서 : 단순한 명령 집합을 가진 프로세서가 더 효율적이지 않을까

아키텍처는 논리적인 명령 집합을 물리적으로 표현한 것이다.














