sql 문법


데이터베이스 : 데이터를 구조적으로 모아둔 집합소

관계형 데이터베이스 : 열과 행을 가진 테이블 형태로 데이터를 관리한다.

테이블, 릴레이션
로우, 레코드,튜플
컬럼, 속성

RDBMS : 데이터베이스에 접근 할 수 있게 해주는 시스템 주요 기능 추가, 수정, 삭제, 조회, 무결성 유지, 트랜젝션 관리, 백업 및 복원, 보안

SQL : 구조화된 질의 언어(데이터를 관리 하기 위한 프로그래밍 언어)

DDL, DML(CRUD), DCL

create database name

create table name (column)

drop table name
drop database name

insert into table_name (colum~) values(~)

select colum from table where condition

update table set col = data where condition

delete from table where (condition)

sql 연산자 : 산술 연산자, 비교 연산자, 논리 연산자, 비트 논리 연산자, 연결 연산자, IN연산자, Like 연산자

not 1 , and 2(논리곱) , or 3(논리합)

비트 연산 : 이진 연산 -> and & , or | , xor ^

연결 연산 : 공백(구분) 문자열 형태일 때 문자를 붙여 준다 또는 concat(문자열...)

in 연산 : 컬럼 in (값..), 컬럼 not in (값...)

like 연산 : 문자 패턴을 사용,와일드 카드  % : 모든 문자, _ : 하나의 문자

문자열 함수 : 

substr
substring
mid

아스키 코드 변환 함수 :
char -> ascii
ascii

ascii -> char
char

count 함수 : count(col)

길이 함수 : length

조건 문 : if, case when[condition] then[true] else [false] end

서브 쿼리 : select(스칼라 서브 퀄리하나의 레코드에 하나의 컬럼 반환), from(인라인 뷰 -> 가상 테이블), where(일반 쿼리)

단일 행 서브쿼리

다중 행 서브쿼리

order by : asc  desc

출력 개수 제한 : limit[offset],[row_count]
limit[row_count]

group by : 특정 칼럼을 기준으로 데이터를 그룹핑 함

index : primary key(하나만 정의), unique key(여러개 정의 가능), normal key(데이터 중복 허용), full text, 중복 키
자주 조회되는 컬럼, 조회 시 많은 시간이 걸리는 컬럼, 데이터가 긴 경우 인덱스를 사용 하지 않는다.

join : 
